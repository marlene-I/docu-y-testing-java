/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.51).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package swagger.api;


import swagger.model.Persona;
import swagger.model.Socio;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2023-12-30T14:23:23.357295482Z[GMT]")
@Validated
public interface NominaApi {


    @Operation(summary = "Agregar persona a la nómina de socios", description = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Persona agregada a la nómina correctamente"),
        
        @ApiResponse(responseCode = "406", description = "Datos de la persona incorrectos o incompletos") })
    @RequestMapping(value = "/nomina/asociar",
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> nominaAsociarPost(@Parameter(in = ParameterIn.DEFAULT, description = "Datos de la persona a agregar a la nómina", required=true, schema=@Schema()) @Valid @RequestBody Persona body
);


    @Operation(summary = "Obtener listado de socios (no implementado)", description = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Listado de socios obtenido correctamente", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Socio.class)))) })
    @RequestMapping(value = "/nomina/list",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Socio>> nominaListGet();

}

